# Here are some example annotations for test expecations

# this test fails on this platform, with this toolchain pairing
[targets.x86_64-pc-windows-msvc."simple::cc_calls_rustc"]
fail = "check"

# this test has random results on this platform, whenever rustc is the caller (callee also supported)
[targets.x86_64-pc-windows-msvc."simple::rustc_caller"]
random = true

# whenever this test involves cc, only link it, and expect linking to fail
[targets.x86_64-pc-windows-msvc."EmptyStruct::cc_toolchain"]
run = "link"
fail = "link"

# any repr(c) version of this test fails to run
[targets.x86_64-unknown-linux-gnu."simple::repr_c"]
busted = "run"

# for this pairing, with the rust calling convention, only generate the test, and expect it to work
[targets.x86_64-unknown-linux-gnu."simple::rustc_calls_rustc::conv_rust"]
run = "generate"
pass = "generate"

# can match all tests with leading ::
[targets.x86_64-unknown-linux-gnu."::rustc_calls_rustc"]
run = "generate"
pass = "generate"
